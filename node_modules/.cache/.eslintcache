[{"/Users/emergency/Downloads/Project/src/index.js":"1","/Users/emergency/Downloads/Project/src/routes.js":"2","/Users/emergency/Downloads/Project/src/Login.js":"3","/Users/emergency/Downloads/Project/src/about.js":"4","/Users/emergency/Downloads/Project/src/Theory.js":"5","/Users/emergency/Downloads/Project/src/App.js":"6","/Users/emergency/Downloads/Project/src/Register.js":"7","/Users/emergency/Downloads/Project/src/firebase-config.js":"8"},{"size":450,"mtime":1684227621914,"results":"9","hashOfConfig":"10"},{"size":657,"mtime":1669561200000,"results":"11","hashOfConfig":"10"},{"size":6767,"mtime":1684230535198,"results":"12","hashOfConfig":"10"},{"size":3540,"mtime":1669570603000,"results":"13","hashOfConfig":"10"},{"size":5204,"mtime":1669568101000,"results":"14","hashOfConfig":"10"},{"size":15081,"mtime":1669576025000,"results":"15","hashOfConfig":"10"},{"size":5039,"mtime":1684227470763,"results":"16","hashOfConfig":"10"},{"size":1412,"mtime":1684227214959,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y3unx5",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/emergency/Downloads/Project/src/index.js",[],[],"/Users/emergency/Downloads/Project/src/routes.js",["47"],[],"import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Register from './Register'\nimport Login from './Login'\nimport About from './about'\nimport App from './App'\nimport Theory from './Theory'\nimport about from \"./about\";\n\nfunction R() {\n    return (\n        <BrowserRouter>\n        <Routes>\n            <Route path=\"/\" element={<Login />}/>\n            <Route path=\"register\" element={<Register />} />\n            <Route path=\"about\" element={<About />} />\n            <Route path=\"/auth\" element={<App />} />\n            <Route path=\"/theory\" element={<Theory />} />\n        </Routes>\n        </BrowserRouter>\n    );\n}\n\nexport default R;\n ",[],"/Users/emergency/Downloads/Project/src/Login.js",["48","49","50","51","52"],[],"/Users/emergency/Downloads/Project/src/about.js",["53","54","55","56","57","58","59","60","61","62"],[],"import { Grid, TextField, Button } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { signInWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './firebase-config.js'\nimport { useNavigate } from \"react-router-dom\";\nimport { Typography } from '@mui/material';\nimport { DonutLarge, Pix } from \"@mui/icons-material\";\nimport { fontStyle } from \"@mui/system\";\nimport logo from \"./logo.png\";\nimport kabir from \"./1.png\";\nimport manav from \"./2.png\";\nimport madhav from \"./3.png\";\nimport aman from \"./4.png\";\n\n// var a= 1;\nconsole.log(logo)\nconst About = () => {\n    const navigate = useNavigate();\n    function changeImage(file)\n    {\n        let img=document.querySelector(\"#image\");\n        img.setAttribute(\"src\",file);\n    }\n    const myStyle = {\n        backgroundImage:\n        \"url('https://wallpaperaccess.com/full/2003822.png')\",\n        height: '1000px',\n        width:'1600px',\n        // marginTop: '30px',\n        fontSize: '50px',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        textAlign: 'left',\n\n    };\n\n    \n    return (\n\n            <div style={myStyle}>\n            <div style ={{height:'10px',backgroundColor:\"red\"}}>\n            <Grid item xs={6} style={{ paddingLeft: 30, textAlign: \"left\",height:'10px',width:'10px'}}>\n            <img id=\"image\" src={logo} width=\"200\" height=\"200\"/>\n            </Grid>\n            </div>\n  \n            <Grid item xs={6} style={{ paddingLeft: 30, textAlign: \"left\" }}>\n            <Typography align='center' variant='h3' style={{paddingTop:'30px', paddingLeft:'200px', textAlign:\"left\", fontFamily: \"cursive\",fontWeight: \"bold\",fontSize:'90px',color:\"white\"}} >OUR TEAM</Typography>\n            </Grid>\n\n            <div>\n            <Grid style={{ width: 290 }}>\n            <Typography onClick={()=> changeImage(logo)} align='center' variant='h1' style={{paddingTop:'50px', paddingLeft:'20px', textAlign:\"left\", fontFamily: \"cursive\",fontSize:'57px',color:\"yellow\"}} >Members</Typography>\n            <Typography onClick={()=> changeImage(kabir)} align='center' variant='h3' style={{paddingTop:'30px', paddingLeft:'30px', textAlign:\"left\", fontFamily: \"monospace\",fontSize:'30px',color:\"darkblue\"}} >Kabir Shamlani</Typography>\n            <Typography onClick={()=> changeImage(manav)} align='center' variant='h3' style={{paddingTop:'0px', paddingLeft:'30px', textAlign:\"left\", fontFamily: \"monospace\",fontSize:'30px',color:\"darkblue\"}} >Manav Shah</Typography>\n            <Typography onClick={()=> changeImage(madhav)} align='center' variant='h3' style={{paddingTop:'0px', paddingLeft:'30px', textAlign:\"left\", fontFamily: \"monospace\",fontSize:'30px',color:\"darkblue\"}} >Madhav Tank</Typography>\n            <Typography onClick={()=> changeImage(aman)} align='center' variant='h3' style={{paddingTop:'0px', paddingLeft:'30px', textAlign:\"left\", fontFamily: \"monospace\",fontSize:'30px',color:\"darkblue\"}} >Aman Raj</Typography>\n            </Grid>\n            </div>\n          \n            <Grid item xs={12} style={{ paddingLeft: '30px' ,paddingBottom:'0px', paddingTop:'500px'}}>\n                    <Button\n                    \n                        variant=\"outlined\"\n                        onClick={() => navigate('/')}\n                        sx={{ minWidth: \"100px\", minHeight: \"60px\"\n                   , backgroundColor:\"red\" }}\n                    >\n                       Back\n                    </Button>\n                </Grid>\n             </div>\n\n\n)\n\n}\nexport default About","/Users/emergency/Downloads/Project/src/Theory.js",["63","64","65","66","67","68","69","70","71","72"],[],"import { Grid, TextField, Button } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { signInWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './firebase-config.js'\nimport { useNavigate } from \"react-router-dom\";\nimport { Typography } from '@mui/material';\nimport { DonutLarge, Pix } from \"@mui/icons-material\";\nimport { fontStyle } from \"@mui/system\";\n\nconst Theory = ()=>{\n    const navigate = useNavigate() \n\n    const myStyle = {\n        // backgroundImage:\n        // \"url('https://www.electricmotorengineering.com/files/2019/03/Foto-1-Dc-motors.jpg')\",\n        height: '800px',\n        marginTop: '30px',\n        fontSize: '50px',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        textAlign: 'center',\n\n    };\n\n    useEffect(()=>{\n        onAuthStateChanged(auth, user=>{\n            navigate(\"/theory\") \n        })\n    },[]) \n\n    const newStyle={\n        fontSize: '25px',\n        textAlign: 'justify',\n        fontFamily: 'monospace'\n    };\n    return (\n        <div style={myStyle}>\n            \n                    <Grid item xs={6} style={{ paddingLeft: 30, textAlign: \"center\" }}>\n                        <Typography align='center' variant='h3' style={{ fontFamily: \"times\" }} >DC MOTORS: REMOTE LABS</Typography>\n                    </Grid>\n                    <br></br>\n                    <Grid item xs={6} style={{ paddingLeft: 30, textAlign: \"center\" }}>\n                        <Typography align='center' variant='h4' style={{ fontFamily: \"times\" }} >How To Use This Page?</Typography>\n                    </Grid>\n                    <ul style={newStyle}>\n                        <li>You Have To First Login To This Page Using Your Email ID and Password</li>\n                        <img src={require('./loginpage.png')} />\n                        <li>If You Have Not Logged In To The Page Before, Please Register Before Logging In Again</li>\n                        <img src={require('./createpage.png')} />\n                        <li>After Completing Login , you will be redirected to the Experiment's Page</li>\n                        <img src={require('./experimentpage.png')} />\n                        <li>The Experiment's Page contains the following information:</li>\n                        <ul>\n                            <li>The Current Voltage and RPM measured by the sensors</li>\n                            <li>A slider to change the value of the Voltage fed to the DC Motor</li>\n                            <li>Two graphs which shows the variation of Voltage and RPM over the time</li>\n                        </ul>\n                        <li>To Logout of the current session, please click on the Sign Out button in the Page</li>\n                    </ul>\n\n                    <Grid item xs={6} style={{ paddingLeft: 30, textAlign: \"center\" }}>\n                        <Typography align='center' variant='h4' style={{ fontFamily: \"times\" }} >Theory Of DC Motors Experiment</Typography>\n                    </Grid>\n                    <p style={newStyle}>\n                        The DC Motor Experiment is an experiment to analyze the running of a DC motor and find the dependence of\n                        RPM (Revolution Per Minute) on the Input voltage to the DC Motor.\n                        The experiment uses a couple of sensors and actuators to acheive this goal. The following sensors are used for this\n                        purpose:\n                        <ul>\n                            <li><strong>ESP32 Microcontroller: </strong> The ESP32 Microcontroller serves as the purpose of\n                            controlling the input voltage that is supplied to the DC Motor. It also takes the readings from all the other sensors.</li>\n                            <li><strong>Motor Driver: </strong> The motor driver is a device that is used to \n                            change the voltage supplied to the motor.</li>\n                            <li><strong>LN393 Sensor [RPM Sensor]: </strong> This sensor is used to find the current RPM of the DC Motor.</li>\n                            <li><strong>DC Motor: </strong> This is the only actuator in our experiment.</li>\n                            <li><strong>ESP32 Cam: </strong> This is a camera module to give the live footage \n                            of the experiment to the user of the website, so that he/she can see the experiment's live \n                            demonstration.</li>\n                        </ul>\n                        <strong>Observations: </strong>\n                        If the experiment were done successfully, then this should mean that we should see that the RPM should increase with increase in the voltage supplied to the\n                        DC Motor. \n                        </p>\n                        <Button\n                        variant=\"contained\"\n\n                        onClick={()=> {navigate('/auth');window.location.reload();}} \n                        sx={{ minWidth: \"150px\", minHeight: \"60px\" }}\n                        >\n                        Go Back\n                    </Button>\n                </div>\n    )\n\n\n}\n\nexport default Theory ","/Users/emergency/Downloads/Project/src/App.js",["73","74","75","76","77","78","79"],[],"// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ElectricMeterIcon from '@mui/icons-material/ElectricMeter';\nimport SpeedIcon from '@mui/icons-material/Speed';\n\n// Argon Dashboard 2 MUI components\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\n\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { Line } from 'react-chartjs-2';\nimport { auth } from './firebase-config.js'\nimport { signOut, onAuthStateChanged } from 'firebase/auth'\nimport { useNavigate } from 'react-router-dom'\n\nimport Chart from 'chart.js/auto'\n\nfunction Default() {\n\n\n    setTimeout(()=>{\n        window.location.reload();\n    },10000); \n    \n    const myStyle={\n        backgroundImage: \n        // \"url('https://www.shutterstock.com/blog/wp-content/uploads/sites/5/2020/05/shutterstock_407554567.jpg')\",\n        // \"url('https://colibriwp.com/blog/wp-content/uploads/2019/06/pawel-czerwinski-vI5XwPbGvmY-unsplash.jpg')\",\n        // \"url('https://www.shutterstock.com/blog/wp-content/uploads/sites/5/2020/05/shutterstock_407554567.jpg')\",\n        // \"url('https://cdn.pixabay.com/photo/2015/10/29/14/38/web-1012467__340.jpg')\",\n        // \"url('https://www.electricmotorengineering.com/files/2019/03/Foto-1-Dc-motors.jpg.jpg')\",\n        // \"url('https://www.web-design-singapore.com.sg/wp-content/uploads/2021/06/hero-image-bg.jpg')\",\n        // \"url('https://wallpaperaccess.com/full/4023652.jpg')\",\n        // \"url('https://w0.peakpx.com/wallpaper/878/690/HD-wallpaper-neon-blue-background-hexagon-neon-3d-background-neon-abstraction-hexagon-texture-blue-neon-light-abstraction.jpg')\",\n        // \"url('https://w0.peakpx.com/wallpaper/447/936/HD-wallpaper-turquoise-hexagons-3d-art-creative-honeycomb-hexagons-patterns-turquoise-hexagons-background-hexagons-textures-turquoise-backgrounds-hexagons-texture.jpg')\",\n        // \"url('https://a-static.besthdwallpaper.com/hexagon-and-pattern-wallpaper-2400x1350-53169_50.jpg')\",\n        // \"url('https://i.pinimg.com/originals/0e/95/cf/0e95cf9bdfb895937d322c2bc37046a9.jpg')\",\n        // \"url('http://parkwalkadvisors.com/wp-content/uploads/2019/04/fuel-3d-tech.png')\",  //best\n        // \"url('https://images.twinkl.co.uk/tw1n/image/private/t_630_eco/website/uploaded/circuit-board-1542799434.jpg')\",\n        \"url('https://images2.alphacoders.com/701/70172.jpg')\",\n        // \"url('https://media.istockphoto.com/id/1392080282/video/glowing-round-illuminated-lines-3d-rendering.jpg?b=1&s=640x640&k=20&c=M7h2pwmAc30-ZmNTdrMrsujSVh8kjd1PzI5gMg3VaUY=')\",\n        // \"url('https://images.hdqwalls.com/wallpapers/colors-abstract-background-uq.jpg')\",\n        // \"url('http://www.skyhook.com/hubfs/Billboard_Images/iot_background_blank.png')\",\n        // \"url('https://img.freepik.com/premium-vector/futuristic-technology-cloud-iot-dark-blue-background_34645-908.jpg')\",\n        // \"url('')\",\n        // \"url('')\",\n        // \"url('')\",\n        // \"url('')\",\n        // \"url('')\",\n        // \"url('')\",\n        // \"url('')\",\n        // \"url('')\",\n        // \"url('')\",\n        \n        height:'800px',\n        marginTop:'30px',\n        fontSize:'50px',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n    };\n    const navigate = useNavigate();\n    const [rpm, setRpm] = useState(null);\n    const [voltage, setVoltage] = useState(null);\n    const [pwm, setPwm] = useState(100);\n\n    const [chose, setChose] = useState('year');\n\n    const [yearRPM, setYearRPM] = useState([]);\n    const [monthRPM, setMonthRPM] = useState([]);\n    const [dayRPM, setDayRPM] = useState([]);\n\n    const [yearNRPM, setYearNRPM] = useState([]);\n    const [monthNRPM, setMonthNRPM] = useState([]);\n    const [dayNRPM, setDayNRPM] = useState([]);\n\n    const [yearVoltage, setYearVoltage] = useState([]);\n    const [monthVoltage, setMonthVoltage] = useState([]);\n    const [dayVoltage, setDayVoltage] = useState([]);\n\n    const [yearCat, setYearCat] = useState([]);\n    const [monthCat, setMonthCat] = useState([]);\n    const [dayCat, setDayCat] = useState([]);\n\n    useEffect(() => {\n        onAuthStateChanged(auth, user => {\n            if (user != null)\n                navigate('/auth');\n            else\n                navigate('/');\n        })\n    }, [])\n\n    const marks = [\n        {\n            value: 0,\n            label: '0%',\n        },\n        {\n            value: 100,\n            label: '100%',\n        },\n    ];\n\n    useEffect(() => {\n        const oneMrpm = []\n        // here \n            axios.get('https://api.thingspeak.com/channels/1922372/feeds.json?api_key=AFJ4TPE2QRRSIKCX')\n            .then(res => {\n                const yr = [], mr = [], dr = [];\n                const ny = [], nm = [], nd = [];\n                const yv = [], mv = [], dv = [];\n\n                const today = new Date();\n                res.data.feeds.map(val => {\n                    // if (val.field1 * val.field2 && val.field1 < 300 && val.field1 >= 0 && val.field2 >= 0)\n                    if(val.field1!=0 && val.field2!=0)\n                    {\n                        const cur = new Date(val.created_at)\n                        console.log(\"here\\n\");\n                        console.log(cur);\n                        if (today.getFullYear() === cur.getFullYear())\n                        {\n                // (original value - min_val_or) / (max_or - min_or) * (new_max - new_min) + new_min\n                            yr.push(val.field1);\n                            ny.push(val.field1 * 3 / 100)\n\n                            if (cur.getDate() < 21)\n                                yv.push(val.field2 * 9 / 5)\n                            else\n                                yv.push(val.field2);\n\n                            if (today.getMonth() === cur.getMonth())\n                            {\n                                mr.push(val.field1);\n                                nm.push(val.field1 * 3 / 100)\n\n                                if (cur.getDate() < 21)\n                                    mv.push(val.field2 * 9 / 5)\n                                else\n                                    mv.push(val.field2);\n\n                                if (today.getDate() === cur.getDate())\n                                {\n                                    if (cur.getDate() < 21)\n                                        dv.push(val.field2 * 9 / 5)\n                                    else\n                                        dv.push(val.field2);\n\n                                    dr.push(val.field1);\n                                    nd.push(val.field1 * 3 / 100)\n                                }\n                            }\n                        }\n                    }\n                })\n\n                // (original value - min_val_or) / (max_or - min_or) * (new_max - new_min) + new_min\n                const yc = [], mc = [], dc = [];\n                for (let i = 0; i < yr.length; i++)\n                    yc.push(i);\n\n                for (let i = 0; i < mr.length; i++)\n                    mc.push(i);\n\n                for (let i = 0; i < dr.length; i++)\n                    dc.push(i);\n\n                setYearRPM(yr);\n                setMonthRPM(mr);\n                setDayRPM(dr);\n                setRpm(dr[dr.length - 1])\n\n                setYearNRPM(ny)\n                setMonthNRPM(nm)\n                setDayNRPM(nd)\n\n                setYearVoltage(yv);\n                setMonthVoltage(mv);\n                setDayVoltage(dv);\n                setVoltage(dv[dv.length - 1])\n\n                setYearCat(yc);\n                setMonthCat(mc);\n                setDayCat(dc);\n\n                console.log(dr)\n                console.log(nd);\n                console.log(dv);\n                console.log(dc);\n            })\n\n        axios.get('http://esw-onem2m.iiit.ac.in:443/~/in-cse/in-name/Team-20/Node-1/Data/la', {\n            headers: {\n                'X-M2M-Origin': 'ZrZ4zY:lC8jfN',\n                'Content-type': 'application/json'\n            },\n            crossDomain: true,\n        }).then(res => {\n            res.data.map(val => {\n                oneMrpm.push(val)\n            })\n        })\n    }, [])\n\n    useEffect(() => {\n        const p = Math.floor(pwm*255/100);\n        \n        console.log(p);\n        axios.get('https://api.thingspeak.com/update?api_key=SNB1WAXEF9EI5O07&field1=' + String(p))\n    }, [pwm])\n\n    return (\n        <div style={myStyle}>\n            <Grid container spacing={3} mb={3}>\n                <Grid item xs={12} md={6} lg={1}>\n                </Grid>\n                <Grid item xs={12} md={6} lg={5}>\n                    <Card sx={{ bgcolor: '#2196f3' }} >\n                        <CardContent>\n                            <Typography color=\"white\" gutterBottom>\n                                <Typography sx={{ fontSize: 20 }}>\n                                    <SpeedIcon /> Latest RPM\n                                </Typography>\n                                {rpm}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={12} md={6} lg={5}>\n                    <Card sx={{ bgcolor: '#2196f3' }} >\n                        <CardContent>\n                            <Typography color=\"white\" gutterBottom>\n                                <Typography sx={{ fontSize: 20 }}>\n                                    <ElectricMeterIcon /> Latest Voltage\n                                </Typography>\n                                {voltage}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n            <Grid container spacing={3} mb={3}>\n                <Grid item xs={12} md={6} lg={4}>\n                </Grid>\n                <Grid item xs={12} lg={4}>\n                <Box\n                    component=\"img\"\n                    sx={{\n                        width: '100%',\n                    }}\n                    alt=\"Camera not connected.\"\n                    src=\"http://192.168.195.242:81/stream\"\n                 />\n                </Grid>\n            </Grid>\n            <Grid container spacing={3} mb={3}>\n                <Grid item xs={12} md={6} lg={12}>\n                </Grid>\n                <Grid item xs={12} md={6} lg={5}>\n                </Grid>\n                <Grid item xs={12} md={6} lg={4}>\n                    <Box sx={{ width: 300, height: 15 }}>\n                    <Slider\n                        aria-label=\"Always visible\"\n                        defaultValue={0}\n                        step={5}\n                        max={100}\n                        marks={marks}\n                        onChange={val => setPwm(val.target.value)}\n                        valueLabelDisplay=\"on\"\n                    />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} md={6} lg={12}>\n                </Grid>\n            </Grid>\n            {/* <Grid container spacing={3} mb={3}>\n                <Grid item xs={12} md={6} lg={4.75}>\n                </Grid>\n                <Grid item xs={12} md={6} lg={1}>\n                    <Button variant={ chose === 'year'? 'contained' : 'outlined' } onClick={() => setChose('year')}>Year</Button>\n                </Grid>\n                <Grid item xs={12} md={6} lg={1}>\n                    <Button variant={ chose === 'month'? 'contained' : 'outlined' } onClick={() => setChose('month')}>Month</Button>\n                </Grid>\n                <Grid item xs={12} md={6} lg={1}>\n                    <Button variant={ chose === 'day'? 'contained' : 'outlined' } onClick={() => setChose('day')}>Day</Button>\n                </Grid>\n            </Grid> */}\n            <Grid container spacing={3} mb={3}>\n                <Grid item xs={12} md={6} lg={1}>\n                </Grid>\n                <Grid item xs={12} lg={5}>\n                    <Paper>\n                        <Line\n                            data={{\n                                labels: chose === 'year' ? yearCat : chose === 'month' ? monthCat : dayCat,\n                                datasets: [{\n                                    label: 'DUTY CYCLES',\n                                    data: chose === 'year' ? yearRPM : chose === 'month' ? monthRPM : dayRPM,\n                                    fill: true,\n                                    backgroundColor: 'red',\n                                }],\n                            }}\n                        >\n                        </Line>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} lg={5}>\n                    <Paper>\n                        <Line\n                            data={{\n                                labels: chose === 'year' ? yearCat : chose === 'month' ? monthCat : dayCat,\n                                datasets: [{\n                                    label: 'RPM',\n                                    data: chose === 'year' ? yearVoltage : chose === 'month' ? monthVoltage : dayVoltage,\n                                    fill: true,\n                                    backgroundColor: 'orange',\n                                } ],\n                            }}\n                        >\n                        </Line>\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Grid container spacing={3} mb={3}>\n                <Grid item xs={12} md={6} lg={3.5}>\n                </Grid>\n                <Grid item xs={12} lg={5}>\n                    <Paper>\n                        <Line\n                            data={{\n                                labels: chose === 'year' ? yearCat : chose === 'month' ? monthCat : dayCat,\n                                datasets: [{\n                                    label: 'Voltage',\n                                    data: chose === 'year' ? yearVoltage : chose === 'month' ? monthVoltage : dayVoltage,\n                                    fill: true,\n                                },{\n                                    label: 'Normalized RPM',\n                                    data: chose === 'year' ? yearNRPM : chose === 'month' ? monthNRPM : dayNRPM,\n                                    fill: true,\n                                }],\n                            }}\n                        >\n                        </Line>\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Grid container spacing={3} mb={3}>\n                <Grid item xs={12} md={6} lg={5.5}>\n                </Grid>\n                <Grid item xs={12} md={6} lg={1.5}>\n                    <Button variant={'outlined'} onClick={() => signOut(auth)}>Sign Out</Button>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Default;\n","/Users/emergency/Downloads/Project/src/Register.js",["80","81"],[],"/Users/emergency/Downloads/Project/src/firebase-config.js",["82"],[],{"ruleId":"83","severity":1,"message":"84","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":13},{"ruleId":"83","severity":1,"message":"87","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":20},{"ruleId":"83","severity":1,"message":"88","line":7,"column":22,"nodeType":"85","messageId":"86","endLine":7,"endColumn":25},{"ruleId":"83","severity":1,"message":"89","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":19},{"ruleId":"83","severity":1,"message":"90","line":53,"column":11,"nodeType":"85","messageId":"86","endLine":53,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":86,"column":8,"nodeType":"93","endLine":86,"endColumn":10,"suggestions":"94"},{"ruleId":"83","severity":1,"message":"95","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"96","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":18},{"ruleId":"83","severity":1,"message":"97","line":2,"column":20,"nodeType":"85","messageId":"86","endLine":2,"endColumn":29},{"ruleId":"83","severity":1,"message":"98","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":36},{"ruleId":"83","severity":1,"message":"99","line":3,"column":38,"nodeType":"85","messageId":"86","endLine":3,"endColumn":56},{"ruleId":"83","severity":1,"message":"100","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":14},{"ruleId":"83","severity":1,"message":"87","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":20},{"ruleId":"83","severity":1,"message":"88","line":7,"column":22,"nodeType":"85","messageId":"86","endLine":7,"endColumn":25},{"ruleId":"83","severity":1,"message":"89","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":19},{"ruleId":"101","severity":1,"message":"102","line":43,"column":13,"nodeType":"103","endLine":43,"endColumn":66},{"ruleId":"83","severity":1,"message":"95","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"96","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":18},{"ruleId":"83","severity":1,"message":"98","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":36},{"ruleId":"83","severity":1,"message":"87","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":20},{"ruleId":"83","severity":1,"message":"88","line":7,"column":22,"nodeType":"85","messageId":"86","endLine":7,"endColumn":25},{"ruleId":"83","severity":1,"message":"89","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":29,"column":7,"nodeType":"93","endLine":29,"endColumn":9,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"102","line":48,"column":25,"nodeType":"103","endLine":48,"endColumn":65},{"ruleId":"101","severity":1,"message":"102","line":50,"column":25,"nodeType":"103","endLine":50,"endColumn":66},{"ruleId":"101","severity":1,"message":"102","line":52,"column":25,"nodeType":"103","endLine":52,"endColumn":70},{"ruleId":"83","severity":1,"message":"105","line":22,"column":8,"nodeType":"85","messageId":"86","endLine":22,"endColumn":13},{"ruleId":"83","severity":1,"message":"106","line":72,"column":19,"nodeType":"85","messageId":"86","endLine":72,"endColumn":27},{"ruleId":"91","severity":1,"message":"92","line":97,"column":8,"nodeType":"93","endLine":97,"endColumn":10,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":120,"column":40,"nodeType":"110","messageId":"111","endLine":120,"endColumn":42},{"ruleId":"112","severity":1,"message":"113","line":122,"column":34,"nodeType":"114","messageId":"115","endLine":122,"endColumn":36},{"ruleId":"112","severity":1,"message":"113","line":122,"column":51,"nodeType":"114","messageId":"115","endLine":122,"endColumn":53},{"ruleId":"108","severity":1,"message":"109","line":205,"column":30,"nodeType":"110","messageId":"111","endLine":205,"endColumn":32},{"ruleId":"83","severity":1,"message":"90","line":27,"column":11,"nodeType":"85","messageId":"86","endLine":27,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":60,"column":8,"nodeType":"93","endLine":60,"endColumn":10,"suggestions":"116"},{"ruleId":"83","severity":1,"message":"117","line":38,"column":7,"nodeType":"85","messageId":"86","endLine":38,"endColumn":16},"no-unused-vars","'about' is defined but never used.","Identifier","unusedVar","'DonutLarge' is defined but never used.","'Pix' is defined but never used.","'fontStyle' is defined but never used.","'myStyle2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'TextField' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'signInWithEmailAndPassword' is defined but never used.","'onAuthStateChanged' is defined but never used.","'auth' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["119"],"'Chart' is defined but never used.","'setChose' is assigned a value but never used.",["120"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["121"],"'analytics' is assigned a value but never used.",{"desc":"122","fix":"123"},{"desc":"122","fix":"124"},{"desc":"122","fix":"125"},{"desc":"122","fix":"126"},"Update the dependencies array to be: [navigate]",{"range":"127","text":"128"},{"range":"129","text":"128"},{"range":"130","text":"128"},{"range":"131","text":"128"},[2524,2526],"[navigate]",[919,921],[4491,4493],[1881,1883]]